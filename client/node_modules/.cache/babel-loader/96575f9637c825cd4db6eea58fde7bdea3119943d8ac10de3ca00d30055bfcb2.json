{"ast":null,"code":"var _jsxFileName = \"/home/ranganath/projects/multimart-react-ecommerce/client/src/components/AdminPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useTable } from \"react-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPanel = () => {\n  _s();\n  const [data, setData] = useState([{\n    _id: \"1\",\n    name: \"John Doe\",\n    phone: \"123-456-7890\",\n    seva: \"Service 1\"\n  }, {\n    _id: \"2\",\n    name: \"Jane Doe\",\n    phone: \"987-654-3210\",\n    seva: \"Service 2\"\n  }\n  // Add more initial rows as needed\n  ]);\n\n  const [newData, setNewData] = useState({\n    name: \"\",\n    phone: \"\",\n    seva: \"\"\n  });\n  const handleChange = e => {\n    setNewData({\n      ...newData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleAddData = () => {\n    // Validate and add new data\n    if (newData.name && newData.phone && newData.seva) {\n      const updatedData = [...data, {\n        _id: data.length + 1,\n        ...newData\n      }];\n      setData(updatedData);\n      setNewData({\n        name: \"\",\n        phone: \"\",\n        seva: \"\"\n      });\n    } else {\n      alert(\"Please fill in all fields\");\n    }\n  };\n  const columns = React.useMemo(() => [{\n    Header: \"ID\",\n    accessor: \"_id\"\n  }, {\n    Header: \"Name\",\n    accessor: \"name\"\n  }, {\n    Header: \"Phone\",\n    accessor: \"phone\"\n  }, {\n    Header: \"Seva\",\n    accessor: \"seva\"\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: newData.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Phone:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"phone\",\n          value: newData.phone,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Seva:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"seva\",\n          value: newData.seva,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddData,\n        children: \"Add Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps(),\n      style: {\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            ...column.getHeaderProps(),\n            children: column.render(\"Header\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n              ...cell.getCellProps(),\n              children: cell.render(\"Cell\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPanel, \"G4hjvhm769O8uIWBl8oMnqPildI=\", false, function () {\n  return [useTable];\n});\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useState","useTable","jsxDEV","_jsxDEV","AdminPanel","_s","data","setData","_id","name","phone","seva","newData","setNewData","handleChange","e","target","value","handleAddData","updatedData","length","alert","columns","useMemo","Header","accessor","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","style","width","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","_c","$RefreshReg$"],"sources":["/home/ranganath/projects/multimart-react-ecommerce/client/src/components/AdminPanel.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useTable } from \"react-table\";\n\nconst AdminPanel = () => {\n  const [data, setData] = useState([\n    { _id: \"1\", name: \"John Doe\", phone: \"123-456-7890\", seva: \"Service 1\" },\n    { _id: \"2\", name: \"Jane Doe\", phone: \"987-654-3210\", seva: \"Service 2\" },\n    // Add more initial rows as needed\n  ]);\n\n  const [newData, setNewData] = useState({ name: \"\", phone: \"\", seva: \"\" });\n\n  const handleChange = (e) => {\n    setNewData({ ...newData, [e.target.name]: e.target.value });\n  };\n\n  const handleAddData = () => {\n    // Validate and add new data\n    if (newData.name && newData.phone && newData.seva) {\n      const updatedData = [...data, { _id: data.length + 1, ...newData }];\n      setData(updatedData);\n      setNewData({ name: \"\", phone: \"\", seva: \"\" });\n    } else {\n      alert(\"Please fill in all fields\");\n    }\n  };\n\n  const columns = React.useMemo(\n    () => [\n      { Header: \"ID\", accessor: \"_id\" },\n      { Header: \"Name\", accessor: \"name\" },\n      { Header: \"Phone\", accessor: \"phone\" },\n      { Header: \"Seva\", accessor: \"seva\" },\n    ],\n    []\n  );\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({ columns, data });\n\n  return (\n    <div>\n      <h1>User Data</h1>\n\n      {/* Form for adding new data */}\n      <div>\n        <label>\n          Name:\n          <input type=\"text\" name=\"name\" value={newData.name} onChange={handleChange} />\n        </label>\n        <label>\n          Phone:\n          <input type=\"text\" name=\"phone\" value={newData.phone} onChange={handleChange} />\n        </label>\n        <label>\n          Seva:\n          <input type=\"text\" name=\"seva\" value={newData.seva} onChange={handleChange} />\n        </label>\n        <button onClick={handleAddData}>Add Data</button>\n      </div>\n\n      <table {...getTableProps()} style={{ width: \"100%\" }}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => (\n                  <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                ))}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default AdminPanel;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}