{"ast":null,"code":"var _jsxFileName = \"/home/ranganath/projects/multimart-react-ecommerce/client/src/components/AdminPanel.js\",\n  _s = $RefreshSig$();\n// components/AdminPanel.js\nimport React from \"react\";\nimport { useTable } from \"react-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPanel = () => {\n  _s();\n  // Hardcoded data\n  const data = React.useMemo(() => [{\n    _id: \"1\",\n    name: \"John Doe\",\n    phone: \"123-456-7890\",\n    seva: \"Service 1\"\n  }, {\n    _id: \"2\",\n    name: \"Jane Doe\",\n    phone: \"987-654-3210\",\n    seva: \"Service 2\"\n  }\n  // Add more rows as needed\n  ], []);\n  const columns = React.useMemo(() => [{\n    Header: \"ID\",\n    accessor: \"_id\"\n  }, {\n    Header: \"Name\",\n    accessor: \"name\"\n  }, {\n    Header: \"Phone\",\n    accessor: \"phone\"\n  }, {\n    Header: \"Seva\",\n    accessor: \"seva\"\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps(),\n      style: {\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            ...column.getHeaderProps(),\n            children: column.render(\"Header\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n              ...cell.getCellProps(),\n              children: cell.render(\"Cell\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPanel, \"2M+cEGJjZRLIqxt38XQe/AMxJJk=\", false, function () {\n  return [useTable];\n});\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useTable","jsxDEV","_jsxDEV","AdminPanel","_s","data","useMemo","_id","name","phone","seva","columns","Header","accessor","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","_c","$RefreshReg$"],"sources":["/home/ranganath/projects/multimart-react-ecommerce/client/src/components/AdminPanel.js"],"sourcesContent":["// components/AdminPanel.js\nimport React from \"react\";\nimport { useTable } from \"react-table\";\n\nconst AdminPanel = () => {\n  // Hardcoded data\n  const data = React.useMemo(\n    () => [\n      { _id: \"1\", name: \"John Doe\", phone: \"123-456-7890\", seva: \"Service 1\" },\n      { _id: \"2\", name: \"Jane Doe\", phone: \"987-654-3210\", seva: \"Service 2\" },\n      // Add more rows as needed\n    ],\n    []\n  );\n\n  const columns = React.useMemo(\n    () => [\n      { Header: \"ID\", accessor: \"_id\" },\n      { Header: \"Name\", accessor: \"name\" },\n      { Header: \"Phone\", accessor: \"phone\" },\n      { Header: \"Seva\", accessor: \"seva\" },\n    ],\n    []\n  );\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({ columns, data });\n\n  return (\n    <div>\n      <h1>User Data</h1>\n      <table {...getTableProps()} style={{ width: \"100%\" }}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map((row) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => (\n                  <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                ))}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default AdminPanel;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}